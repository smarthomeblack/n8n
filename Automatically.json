{
  "name": "Automatically",
  "nodes": [
    {
      "parameters": {
        "options": {}
      },
      "id": "61d0e78d-34ea-4266-9d0d-16b917e2e934",
      "name": "Loop Over Items",
      "type": "n8n-nodes-base.splitInBatches",
      "position": [
        512,
        880
      ],
      "typeVersion": 3
    },
    {
      "parameters": {},
      "id": "ceeb33f9-5edd-4760-ae69-de3f8f7c7fe4",
      "name": "Replace Me",
      "type": "n8n-nodes-base.noOp",
      "position": [
        1376,
        1264
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "version": 2,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "2f466934-e257-4315-8a7f-5e3dde987430",
              "operator": {
                "name": "filter.operator.equals",
                "type": "string",
                "operation": "equals"
              },
              "leftValue": "={{ $json.labelIds[2] }}",
              "rightValue": "={{ $json.labelIds[2] }}"
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "d9ddec50-7a7c-476b-af88-94d06fc3d2ce",
      "name": "If",
      "type": "n8n-nodes-base.if",
      "position": [
        864,
        1104
      ],
      "typeVersion": 2.2
    },
    {
      "parameters": {},
      "id": "6fdbf75a-182d-4793-b4c7-2a3c29127a4c",
      "name": "Merge",
      "type": "n8n-nodes-base.merge",
      "position": [
        1024,
        912
      ],
      "typeVersion": 3.1
    },
    {
      "parameters": {
        "operation": "getAll",
        "limit": 20,
        "simple": false,
        "filters": {
          "readStatus": "both"
        },
        "options": {}
      },
      "id": "65925cff-ae6d-4d01-b04f-09081dda5f6f",
      "name": "Gmail - Get All Messages",
      "type": "n8n-nodes-base.gmail",
      "position": [
        1200,
        656
      ],
      "webhookId": "a501a86b-b2df-45ec-b0d9-178765859a0f",
      "typeVersion": 2.1,
      "credentials": {
        "gmailOAuth2": {
          "id": "e9p4d9udeF87bDqe",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "messageId": "={{ $json.id }}",
        "simple": false,
        "options": {}
      },
      "id": "7c9da3f9-ab0c-4244-a086-04e36a22e5f2",
      "name": "Gmail - Single Message",
      "type": "n8n-nodes-base.gmail",
      "position": [
        752,
        896
      ],
      "webhookId": "ebc7d7c4-aece-4cd4-a46f-dff18891931e",
      "typeVersion": 2.1,
      "credentials": {
        "gmailOAuth2": {
          "id": "e9p4d9udeF87bDqe",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "content": "## Auto Gmail Labeling (Powered by OpenAI)",
        "height": 996,
        "width": 1692
      },
      "id": "47aabef5-1f4e-4fa3-9fd9-f4ab724fc6d9",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        368,
        544
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "2e246278-eccb-4cd5-8c93-7daa824066e3",
              "name": "id",
              "type": "string",
              "value": "={{ $json.id }}"
            },
            {
              "id": "06e5dde5-dfce-4d4d-859d-b364301cb5aa",
              "name": "from",
              "type": "string",
              "value": "={{ $json.headers.from }}"
            },
            {
              "id": "e10231b9-fbb1-447a-a3fc-3ba8e5a9d314",
              "name": "headers.subject",
              "type": "string",
              "value": "={{ $json.headers.subject }}"
            },
            {
              "id": "6a472d41-0f6e-4803-8d94-4b4f8272e66c",
              "name": "text",
              "type": "string",
              "value": "={{ $json.text }}"
            }
          ]
        },
        "options": {}
      },
      "id": "92f4c2be-42e7-49fe-a43a-66060495af30",
      "name": "Extract Email Data",
      "type": "n8n-nodes-base.set",
      "position": [
        1216,
        912
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Here is the email details:\nFrom: { $('Merge').item.json.headers.from }}\nSubject line: {{ $json.headers.subject }}\nEmail Body: \n{{ $json.text }}",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "You are my Personal Email Labeler.  \nWhen I feed you the subject and body of a new email, you must assign exactly one label—no extra text.\n\nAvailable labels:\n- Newsletter  \n- Inquiry  \n- Invoice  \n- Proposal  \n- Action Required  \n- Follow-up Reminder  \n- Task  \n- Personal  \n- Urgent  \n- Bank  \n- Job Update  \n- Spam / Junk  \n- Social / Networking  \n- Receipt  \n- Event Invite  \n- Subscription Renewal  \n- System Notification  \n\nLabel definitions:\n1. Newsletter  \n   • Subscription updates, promotions, digests.  \n   • No reply needed—just file away.  \n2. Inquiry  \n   • Sender asks a question or requests information.  \n   • Prioritize and suggest replying.  \n3. Invoice  \n   • Billing, receipts, payment requests.  \n   • Flag if payment is due.  \n4. Proposal  \n   • Business offers, contracts, collaboration pitches.  \n   • Flag for review; consider acknowledging receipt.  \n5. Action Required  \n   • Requests that demand you do something (book, confirm, complete).  \n   • Mark and suggest a reminder.  \n6. Follow-up Reminder  \n   • Emails reminding you of something pending or that you already acted on.  \n   • Suggest checking status or pinging again.  \n7. Task  \n   • Contains to-do items or project steps.  \n   • Extract tasks, prioritize by deadline.  \n8. Personal  \n   • From friends or family; non-work.  \n   • Keep accessible but low urgency unless marked urgent.  \n9. Urgent  \n   • Critical deadlines, emergencies, time-sensitive.  \n   • Bump to top of your inbox; reply ASAP.  \n10. Bank  \n    • Statements, alerts, transaction notices, fraud warnings from your bank.  \n    • Flag if action is needed (e.g., verify, transfer, dispute).  \n11. Job Update  \n    • Direct messages from recruiters/HR or alerts from job portals (LinkedIn, Naukri, etc.).  \n    • Flag as relevant opportunity; suggest acknowledging or bookmarking.  \n12. Spam / Junk  \n    • Unwanted bulk mail, phishing attempts, obvious ads.  \n    • Auto-archive or delete.  \n13. Social / Networking  \n    • Notifications from social sites (GitHub, Twitter, forums) not job-related.  \n    • File separately from Job Update.  \n14. Receipt  \n    • E-commerce order confirmations, tickets, one-off purchase receipts.  \n    • Archive after processing.  \n15. Event Invite  \n    • Calendar invitations or RSVPs (Google Meet, Zoom, Outlook).  \n    • Accept/decline or add to calendar.  \n16. Subscription Renewal  \n    • Reminders for software licenses, memberships, domain renewals.  \n    • Flag for manual renewal.  \n17. System Notification  \n    • Alerts from monitoring tools, CI/CD, cloud services, security scanners.  \n    • Triage or forward to team channel.\n\nRules:\n- Read subject + body.  \n- Choose the single best label.  \n- Output **only** that label."
        }
      },
      "id": "82ea2062-8dc8-4087-82e7-c45047e14d41",
      "name": "Categorize Email with AI",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "position": [
        1424,
        912
      ],
      "typeVersion": 1.7
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "2494d69d-3e5e-42ba-88d2-b76ca1962881",
              "name": "output",
              "type": "string",
              "value": "={{ $json.output }}"
            }
          ]
        },
        "options": {}
      },
      "id": "bd3e558c-1e2a-4962-bf65-c92edfaad559",
      "name": "Store AI Category",
      "type": "n8n-nodes-base.set",
      "position": [
        1808,
        912
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "resource": "label",
        "returnAll": true
      },
      "id": "b7e2e5a9-772b-4f8b-a018-d59924e80fd5",
      "name": "List All Gmail Labels",
      "type": "n8n-nodes-base.gmail",
      "position": [
        528,
        1280
      ],
      "webhookId": "5c3cbc0b-9239-4a17-a8ec-bc8819341e47",
      "typeVersion": 2.1,
      "credentials": {
        "gmailOAuth2": {
          "id": "e9p4d9udeF87bDqe",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "mergeByFields": {
          "values": [
            {
              "field1": "output",
              "field2": "name"
            }
          ]
        },
        "fuzzyCompare": true,
        "options": {
          "multipleMatches": "first"
        }
      },
      "id": "0361804b-a792-4f12-862e-09b6de749128",
      "name": "Check if Label Exists",
      "type": "n8n-nodes-base.compareDatasets",
      "position": [
        752,
        1216
      ],
      "typeVersion": 2.3
    },
    {
      "parameters": {
        "operation": "addLabels",
        "messageId": "={{ $('Extract Email Data').item.json.id }}",
        "labelIds": "={{ $json.different.id.inputB }}"
      },
      "id": "65203535-4a68-4b7e-836b-93aba10b5314",
      "name": "Apply Label to Email",
      "type": "n8n-nodes-base.gmail",
      "position": [
        1152,
        1264
      ],
      "webhookId": "4a35699e-da45-48e9-8e12-d22b2dcca62e",
      "typeVersion": 2.1,
      "credentials": {
        "gmailOAuth2": {
          "id": "e9p4d9udeF87bDqe",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "resource": "label",
        "operation": "create",
        "name": "={{ $('Store AI Category').item.json.output }}",
        "options": {}
      },
      "id": "c693da56-6238-4c21-bdb6-6e3aceffd4a5",
      "name": "Apply New Label",
      "type": "n8n-nodes-base.gmail",
      "position": [
        1808,
        1200
      ],
      "webhookId": "a6722fdc-15cb-4796-b82d-53cc23060640",
      "typeVersion": 2.1,
      "credentials": {
        "gmailOAuth2": {
          "id": "e9p4d9udeF87bDqe",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "operation": "addLabels",
        "messageId": "={{ $('Extract Email Data').item.json.id }}",
        "labelIds": "={{ $json.id }}"
      },
      "id": "86a440fa-b761-4b3f-ae7b-b5fb30a11f9d",
      "name": "Create New Label",
      "type": "n8n-nodes-base.gmail",
      "position": [
        1584,
        1264
      ],
      "webhookId": "9e401ad8-b89c-4015-a3cf-b1000ac51ae1",
      "typeVersion": 2.1,
      "credentials": {
        "gmailOAuth2": {
          "id": "e9p4d9udeF87bDqe",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-nano",
          "cachedResultName": "gpt-4.1-nano"
        },
        "options": {}
      },
      "id": "59b0ed3f-7a2c-44f3-8e7c-ebb91ead16d2",
      "name": "OpenAI Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "position": [
        1424,
        1136
      ],
      "typeVersion": 1.2,
      "credentials": {
        "openAiApi": {
          "id": "riBIC85xJlHV0SPb",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const excludedLabelIds = [\n  \"Label_5\",   // Newsletter\n  \"Label_21\",  // Inquiry\n  \"Label_11\",  // Invoice\n  \"Label_9\",   // Proposal\n  \"Label_52\",  // Action Required\n  \"Label_55\",  // Follow-up Reminder\n  \"Label_53\",  // Task\n  \"Label_44\",  // Personal\n  \"Label_54\",  // Urgent\n  \"Label_12\",  // Bank\n  \"Label_3\",   // Job Update\n  \"Label_42\",  // Spam / Junk\n  \"Label_7\",   // Social / Networking\n  \"Label_8\",   // Receipt\n  \"Label_2\",   // Event Invite\n  \"Label_10\",  // Subscription Renewal\n  \"Label_4\"    // System Notification\n];\n\n\nreturn items.filter(item => {\n  const labels = item.json.labelIds || [];\n  // Exclude if ANY excluded label is present\n  return !labels.some(label => excludedLabelIds.includes(label));\n});\n"
      },
      "id": "ced7a41e-7df9-4c73-ab00-e24677326652",
      "name": "Filter Emails Without Excluded Labels",
      "type": "n8n-nodes-base.code",
      "position": [
        1792,
        656
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "jsCode": "// Kiểm tra dữ liệu đầu vào\nconst inputData = items[0];\nlet htmlContent = \"\";\n\n// Kiểm tra cấu trúc của dữ liệu đầu vào\nif (inputData && typeof inputData === 'object') {\n  // Nếu dữ liệu là một đối tượng, thử lấy thuộc tính 'data'\n  if (inputData.data) {\n    htmlContent = inputData.data;\n  } else if (inputData.json && inputData.json.data) {\n    // Thử lấy từ json.data nếu có\n    htmlContent = inputData.json.data;\n  } else {\n    // Thử tìm bất kỳ thuộc tính nào chứa chuỗi HTML\n    for (const key in inputData) {\n      if (typeof inputData[key] === 'string' && \n          (inputData[key].includes('<div') || inputData[key].includes('<table'))) {\n        htmlContent = inputData[key];\n        break;\n      }\n    }\n  }\n} else if (typeof inputData === 'string') {\n  // Nếu dữ liệu là một chuỗi, sử dụng trực tiếp\n  htmlContent = inputData;\n}\n\n// Xử lý HTML nếu có\nconst result = [];\nlet updateTime = \"\";\nlet dataSource = \"\";\n\nif (htmlContent && htmlContent.length > 0) {\n  try {\n    // Tìm tất cả các bảng trong HTML\n    const tableRegex = /<table[^>]*>[\\s\\S]*?<tbody>[\\s\\S]*?<\\/tbody>[\\s\\S]*?<\\/table>/g;\n    let tableMatch;\n    \n    while ((tableMatch = tableRegex.exec(htmlContent)) !== null) {\n      const tableContent = tableMatch[0];\n      const violation = {};\n      \n      // Tìm tất cả các hàng trong bảng\n      const rowRegex = /<tr>[\\s\\S]*?<td>(.*?)<\\/td>[\\s\\S]*?<td>([\\s\\S]*?)<\\/td>[\\s\\S]*?<\\/tr>/g;\n      let rowMatch;\n      \n      while ((rowMatch = rowRegex.exec(tableContent)) !== null) {\n        if (rowMatch.length >= 3) {\n          const key = rowMatch[1].replace(':', '').trim();\n          let value = rowMatch[2].trim();\n          \n          // Loại bỏ HTML tags từ giá trị\n          value = value.replace(/<button.*?<\\/button>/g, '');\n          value = value.replace(/<[^>]*>/g, ' ').replace(/\\s+/g, ' ').trim();\n          \n          // Chuyển đổi key thành camelCase\n          const camelKey = key\n            .normalize('NFD')\n            .replace(/[\\u0300-\\u036f]/g, '')\n            .replace(/đ/g, 'd')\n            .replace(/Đ/g, 'D')\n            .replace(/\\s+(.)/g, (match, group) => group.toUpperCase())\n            .replace(/\\s/g, '')\n            .replace(/^(.)/, (match, group) => group.toLowerCase());\n          \n          violation[camelKey] = value;\n        }\n      }\n      \n      // Chỉ thêm vi phạm nếu có ít nhất một trường dữ liệu\n      if (Object.keys(violation).length > 0) {\n        result.push(violation);\n      }\n    }\n    \n    // Trích xuất thời gian cập nhật\n    const updateTimeMatch = htmlContent.match(/Dữ liệu được cập nhật vào lúc: ([\\d:, -]+)/);\n    if (updateTimeMatch && updateTimeMatch[1]) {\n      updateTime = updateTimeMatch[1].trim();\n    }\n    \n    // Trích xuất nguồn dữ liệu\n    const sourceMatch = htmlContent.match(/Nguồn: <span[^>]*>(.*?)<\\/span>/);\n    if (sourceMatch && sourceMatch[1]) {\n      dataSource = sourceMatch[1].trim();\n    }\n    \n  } catch (error) {\n    return {\n      json: {\n        error: true,\n        message: `Lỗi khi xử lý dữ liệu: ${error.message}`\n      }\n    };\n  }\n}\n\n// Trả về kết quả\nreturn {\n  json: {\n    violations: result,\n    totalViolations: result.length,\n    licensePlate: result.length > 0 ? result[0].bienKiemSoat : '',\n    vehicleType: result.length > 0 ? result[0].loaiPhuongTien : '',\n    metadata: {\n      updateTime: updateTime,\n      dataSource: dataSource\n    }\n  }\n};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        800,
        96
      ],
      "id": "12f9579e-d6b4-442d-bbd6-b755ed3bd29a",
      "name": "Code"
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "minutes",
              "minutesInterval": 2
            }
          ]
        }
      },
      "id": "4635a3bf-7da7-45b7-9767-539831407a1e",
      "name": "Schedule Gmail",
      "type": "n8n-nodes-base.scheduleTrigger",
      "position": [
        480,
        656
      ],
      "typeVersion": 1.2
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "hours"
            }
          ]
        }
      },
      "id": "f2b7f704-619e-4cfe-a613-4fc00aa03bf1",
      "name": "Schedule Phat nguoi",
      "type": "n8n-nodes-base.scheduleTrigger",
      "position": [
        464,
        112
      ],
      "typeVersion": 1.2
    },
    {
      "parameters": {
        "url": "=https://api.phatnguoi.vn/web/tra-cuu/34B87922/1",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:140.0) Gecko/20100101 Firefox/140.0"
            },
            {
              "name": "Accept",
              "value": "*/*"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.5"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Origin",
              "value": "https://phatnguoi.vn"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "Referer",
              "value": "https://phatnguoi.vn/"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "empty"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-site"
            }
          ]
        },
        "options": {
          "response": {}
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        624,
        16
      ],
      "id": "38c6dcd4-5463-4d50-85a7-64f965ec4ec6",
      "name": "phat-nguoi-oto",
      "retryOnFail": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "url": "=https://api.phatnguoi.vn/web/tra-cuu/34B53015/2",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:140.0) Gecko/20100101 Firefox/140.0"
            },
            {
              "name": "Accept",
              "value": "*/*"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.5"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "Origin",
              "value": "https://phatnguoi.vn"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "Referer",
              "value": "https://phatnguoi.vn/"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "empty"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-site"
            }
          ]
        },
        "options": {
          "response": {}
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        624,
        208
      ],
      "id": "f0a50567-85e7-4145-bf2c-9fccba9ffa4c",
      "name": "phat-nguoi-xemay",
      "retryOnFail": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "resource": "service",
        "operation": "call",
        "domain": "zalo_bot",
        "service": "send_message",
        "serviceAttributes": {
          "attributes": [
            {
              "name": "message",
              "value": "=Có {{ $json.totalViolations }} lỗi phạt nguội\nLoại Phương Tiện: {{ $json.violations[0].loaiPhuongTien }}\nThời Gian Vi Phạm: {{ $json.violations[0].thoiGianViPham }}\nĐịa Điểm Vi Phạm: {{ $json.violations[0].diaDiemViPham }}\nTrạng Thái: {{ $json.violations[0].trangThai }}\nĐơn Vị Phát Hiện: {{ $json.violations[0].donViPhatHienViPham }}\nNơi Giải Quyết: {{ $json.violations[0].noiGiaiQuyetVuViec }}"
            },
            {
              "name": "thread_id",
              "value": "5841349563795164131"
            },
            {
              "name": "account_selection",
              "value": "+84764343466"
            },
            {
              "name": "type",
              "value": "1"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.homeAssistant",
      "typeVersion": 1,
      "position": [
        1184,
        80
      ],
      "id": "6f7b0291-d397-4a4b-88cd-7c8974fa87eb",
      "name": "sent-zalo-my-home",
      "credentials": {
        "homeAssistantApi": {
          "id": "WXHi0cFaoZk4Up9t",
          "name": "Home Assistant account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "44c8d62f-87b4-40f9-b856-96a7349621f0",
              "leftValue": "={{ $json.totalViolations }}",
              "rightValue": 0,
              "operator": {
                "type": "number",
                "operation": "notEquals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        960,
        96
      ],
      "id": "6827d856-75cd-4778-8237-34350b1f8343",
      "name": "If co vi pham"
    },
    {
      "parameters": {
        "content": "Automatically get lookup and sent zalo",
        "height": 640,
        "width": 992
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        368,
        -112
      ],
      "id": "f3712816-bb17-4d2c-9ba1-aca3ca2d0f9a",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "custom",
              "cronExpression": "0 */10 * * * *"
            }
          ]
        },
        "feedUrl": "https://thanhnien.vn/rss/home.rss"
      },
      "type": "n8n-nodes-base.rssFeedReadTrigger",
      "typeVersion": 1,
      "position": [
        1424,
        272
      ],
      "id": "bd2e8d4c-570f-4ebb-8038-88e6ae08947a",
      "name": "dantri"
    },
    {
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "custom",
              "cronExpression": "0 */10 * * * *"
            }
          ]
        },
        "feedUrl": "https://thanhnien.vn/rss/home.rss"
      },
      "type": "n8n-nodes-base.rssFeedReadTrigger",
      "typeVersion": 1,
      "position": [
        1424,
        112
      ],
      "id": "e68f3e94-450a-4f8a-adac-82a6382ef7d1",
      "name": "thannien"
    },
    {
      "parameters": {
        "jsCode": "return items.map(item => {\n  return {\n    json: {\n      title: item.json.title,\n      link: item.json.link,\n      contentSnippet: item.json.contentSnippet,\n      isoDate: item.json.isoDate\n    }\n  };\n});"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1664,
        112
      ],
      "id": "aca60b55-dae4-48f5-9f47-5464e85c29b0",
      "name": "lọc"
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "vnnew",
          "mode": "list",
          "cachedResultName": "vnnew"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "title": "={{ $json.title }}",
            "link": "={{ $json.link }}",
            "contentsnippet": "={{ $json.contentSnippet }}",
            "isodate": "={{ $json.isoDate }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "title",
              "displayName": "title",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "link",
              "displayName": "link",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "contentsnippet",
              "displayName": "contentsnippet",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "isodate",
              "displayName": "isodate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        1872,
        112
      ],
      "id": "0ed38ebe-a59e-47fe-b43b-8cb04ed17e41",
      "name": "lưu tin tức",
      "credentials": {
        "postgres": {
          "id": "EBJiwLdYjld4Ramj",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT * FROM vnnew;",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        1664,
        -32
      ],
      "id": "0123632c-47ce-4a9f-b606-727c0ac30c02",
      "name": "Execute a SQL query",
      "credentials": {
        "postgres": {
          "id": "EBJiwLdYjld4Ramj",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "custom",
              "cronExpression": "0 */10 * * * *"
            }
          ]
        },
        "feedUrl": "https://vnexpress.net/rss/tin-moi-nhat.rss"
      },
      "type": "n8n-nodes-base.rssFeedReadTrigger",
      "typeVersion": 1,
      "position": [
        1424,
        -32
      ],
      "id": "4cc6bb54-fd43-4f50-b705-e855016f09cd",
      "name": "vnexpress"
    },
    {
      "parameters": {
        "content": "Automatically get news and save data",
        "height": 632,
        "width": 684
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1376,
        -112
      ],
      "typeVersion": 1,
      "id": "75a6f467-6646-42a5-8a24-268ba95c9d8a",
      "name": "Sticky Note2"
    }
  ],
  "pinData": {},
  "connections": {
    "If": {
      "main": [
        [],
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Extract Email Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Replace Me": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Apply New Label": {
      "main": [
        [
          {
            "node": "Create New Label",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [],
        [
          {
            "node": "Gmail - Single Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create New Label": {
      "main": [
        [
          {
            "node": "Replace Me",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Categorize Email with AI",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Store AI Category": {
      "main": [
        [
          {
            "node": "Check if Label Exists",
            "type": "main",
            "index": 0
          },
          {
            "node": "List All Gmail Labels",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract Email Data": {
      "main": [
        [
          {
            "node": "Categorize Email with AI",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Apply Label to Email": {
      "main": [
        [
          {
            "node": "Replace Me",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check if Label Exists": {
      "main": [
        [
          {
            "node": "Apply New Label",
            "type": "main",
            "index": 0
          }
        ],
        [],
        [
          {
            "node": "Apply Label to Email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "List All Gmail Labels": {
      "main": [
        [
          {
            "node": "Check if Label Exists",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Gmail - Single Message": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Categorize Email with AI": {
      "main": [
        [
          {
            "node": "Store AI Category",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Gmail - Get All Messages": {
      "main": [
        [
          {
            "node": "Filter Emails Without Excluded Labels",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter Emails Without Excluded Labels": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Gmail": {
      "main": [
        [
          {
            "node": "Gmail - Get All Messages",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Phat nguoi": {
      "main": [
        [
          {
            "node": "phat-nguoi-oto",
            "type": "main",
            "index": 0
          },
          {
            "node": "phat-nguoi-xemay",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "phat-nguoi-oto": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "If co vi pham",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "phat-nguoi-xemay": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If co vi pham": {
      "main": [
        [
          {
            "node": "sent-zalo-my-home",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "dantri": {
      "main": [
        [
          {
            "node": "lọc",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "thannien": {
      "main": [
        [
          {
            "node": "lọc",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "lọc": {
      "main": [
        [
          {
            "node": "lưu tin tức",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "vnexpress": {
      "main": [
        [
          {
            "node": "lọc",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "timezone": "Asia/Ho_Chi_Minh",
    "callerPolicy": "workflowsFromSameOwner",
    "executionTimeout": -1,
    "executionOrder": "v0"
  },
  "versionId": "9758089a-21b7-4a87-a2a1-db746748bcef",
  "meta": {
    "templateId": "4557",
    "templateCredsSetupCompleted": true,
    "instanceId": "e04904b93b64c642161331b8db380cfce5f5f603bd433c2125a1547e4e69cd9c"
  },
  "id": "HxCowvz2L8HzCw4z",
  "tags": []
}